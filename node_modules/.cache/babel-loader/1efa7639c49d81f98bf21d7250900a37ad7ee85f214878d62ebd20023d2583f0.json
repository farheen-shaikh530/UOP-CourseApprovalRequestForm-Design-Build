{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import ResultsTable from\"./ResultsTable\";import UniversityAccordion from\"./UniversityAccordion\";// ---- Google Sheets via GViz JSON ---- \nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SPREADSHEET_ID=\"16qWmlJFOqy0AzZ4F76Cds8ch2VNHlN_n\";const GID_GENERAL=\"1296735863\";const GID_MAJORS=\"265343630\";const sstr=v=>v==null?\"\":String(v);// Fetch GViz JSON and unwrap setResponse(...) \nasync function fetchGvizJSON(gid){const cb=Date.now();// cache buster\nconst url=`https://docs.google.com/spreadsheets/d/${SPREADSHEET_ID}/gviz/tq?tqx=out:json&gid=${gid}&cb=${cb}`;const res=await fetch(url,{cache:\"no-store\"});const text=await res.text();if(text.trim().startsWith(\"<\")){throw new Error(\"GViz returned HTML — sheet not public?\");}const json=JSON.parse(text.replace(/^[\\s\\S]*?setResponse\\(/,\"\").replace(/\\);?\\s*$/,\"\"));return json.table;}// Convert GViz table → array of objects using header labels \nfunction gvizToObjects(table){const labels=table.cols.map(c=>((c===null||c===void 0?void 0:c.label)||\"\").trim());return table.rows.map(r=>{const cells=((r===null||r===void 0?void 0:r.c)||[]).map(c=>c?c.v:\"\");return Object.fromEntries(labels.map((lab,i)=>[lab,cells[i]]));});}// Normalize a \"General\" row to stable keys your UI expects \nfunction normalizeGeneralRow(r){var _ref,_ref2,_r$pacific_course_nam,_r$partner_university,_r$country,_r$partner_course_cod,_r$partner_course_nam,_r$partner_course_cre,_r$pacific_course_cod,_r$pacific_major,_r$pacific_course_cre,_r$approval_term,_ref3,_r$providers;const pacNameRaw=(_ref=(_ref2=(_r$pacific_course_nam=r[\"pacific_course_name\"])!==null&&_r$pacific_course_nam!==void 0?_r$pacific_course_nam:r['\"pacific_course_name\\n\"'])!==null&&_ref2!==void 0?_ref2:r['\"pacific_course_name\"'])!==null&&_ref!==void 0?_ref:\"\";return{partner_university:sstr((_r$partner_university=r.partner_university)!==null&&_r$partner_university!==void 0?_r$partner_university:r[\"partner university\"]).trim(),country:sstr((_r$country=r.country)!==null&&_r$country!==void 0?_r$country:r.Country).trim(),partner_course_code:sstr((_r$partner_course_cod=r.partner_course_code)!==null&&_r$partner_course_cod!==void 0?_r$partner_course_cod:r[\"partner course code\"]).trim(),partner_course_name:sstr((_r$partner_course_nam=r.partner_course_name)!==null&&_r$partner_course_nam!==void 0?_r$partner_course_nam:r[\"partner course name\"]).trim(),partner_course_credit:sstr((_r$partner_course_cre=r.partner_course_credit)!==null&&_r$partner_course_cre!==void 0?_r$partner_course_cre:r.Partnere_course_credit).trim(),pacific_course_code:sstr((_r$pacific_course_cod=r.pacific_course_code)!==null&&_r$pacific_course_cod!==void 0?_r$pacific_course_cod:r[\"pacific course code\"]).trim(),pacific_course_name:sstr(pacNameRaw).replace(/\"/g,\"\").trim(),pacific_major:sstr((_r$pacific_major=r.pacific_major)!==null&&_r$pacific_major!==void 0?_r$pacific_major:r[\"pacific major\"]).trim(),pacific_course_credit:sstr((_r$pacific_course_cre=r.pacific_course_credit)!==null&&_r$pacific_course_cre!==void 0?_r$pacific_course_cre:r[\"pacific course credit\"]).trim(),approval_term:sstr((_r$approval_term=r.approval_term)!==null&&_r$approval_term!==void 0?_r$approval_term:r[\"approval term\"]).trim(),providers:sstr((_ref3=(_r$providers=r.providers)!==null&&_r$providers!==void 0?_r$providers:r.provider)!==null&&_ref3!==void 0?_ref3:r.Provider).trim(),__raw:r};}function normalizeMajorsRows(rows){return rows.map(m=>{if(typeof m===\"string\")return m;// m is an object like { \"<some header>\": \"value\" }\nconst firstVal=Object.values(m).find(v=>v&&String(v).trim()!==\"\");return firstVal||\"\";}).map(v=>String(v).trim())// drop header-line like \"major\" or \"major\\n\"\n.filter(v=>v&&v.toLowerCase()!==\"major\").sort();}const CourseFilter=()=>{const[countries,setCountries]=useState([]);const[institutions,setInstitutions]=useState([]);const[subjectAreas,setSubjectAreas]=useState([]);const[pacificCourseCode,setPacificCourseCode]=useState(\"\");const[pacificSubjectAreas,setPacificSubjectAreas]=useState([]);const[uopSchools,setUopSchools]=useState([]);const[results,setResults]=useState([]);const[showTooltip,setShowTooltip]=useState(false);const[selectedCountry,setSelectedCountry]=useState(\"\");const[selectedInstitution,setSelectedInstitution]=useState(\"\");const[selectedSubjectArea,setSelectedSubjectArea]=useState(\"\");const[selectedMajor,setSelectedMajor]=useState(\"\");const[selectedPacificSubjectArea,setSelectedPacificSubjectArea]=useState(\"\");const[allCourses,setAllCourses]=useState([]);const[loading,setLoading]=useState(true);const[noMatchMessage,setNoMatchMessage]=useState(\"\");const[showResults,setShowResults]=useState(false);const isSearchDisabled=!(selectedCountry||selectedInstitution||selectedSubjectArea||selectedMajor||selectedPacificSubjectArea||pacificCourseCode);// ---- load data once ---- \nuseEffect(()=>{const load=async()=>{try{console.log(\"Loading from GViz...\");// Courses \nconst generalTable=await fetchGvizJSON(GID_GENERAL);const generalRows=gvizToObjects(generalTable);const normalized=generalRows.map(normalizeGeneralRow);setAllCourses(normalized);setCountries([...new Set(normalized.map(r=>r.country))].filter(Boolean).sort());setInstitutions([...new Set(normalized.map(r=>r.partner_university))].filter(Boolean).sort());// Majors \nconst majorsTable=await fetchGvizJSON(GID_MAJORS);const majorsRows=gvizToObjects(majorsTable);console.log(\"majorsRows sample:\",majorsRows.slice(0,5));const majorsList=normalizeMajorsRows(majorsRows);setUopSchools(majorsList);console.log(\" Majors list:\",majorsList.length,majorsList.slice(0,10));}catch(e){console.error(\"GViz load error:\",e);setNoMatchMessage(\"Failed to load data from Google Sheets.\");}finally{setLoading(false);}};load();},[]);// Cascading effect for universities when country changes \nuseEffect(()=>{console.log(\" Selected Country=====\",selectedCountry);if(!selectedCountry){const allUnis=[...new Set(allCourses.map(r=>r.partner_university))].filter(Boolean).sort();console.log(\" Showing ALL universities:\",allUnis.length);setInstitutions(allUnis);return;}const filteredUnis=[...new Set(allCourses.filter(r=>(r.country||\"\").toLowerCase()===selectedCountry.toLowerCase()).map(r=>r.partner_university))].filter(Boolean).sort();console.log(` Universities for ${selectedCountry}:`,filteredUnis.length);setInstitutions(filteredUnis);},[selectedCountry,allCourses]);const handleClear=()=>{setSelectedCountry(\"\");setSelectedInstitution(\"\");setSelectedSubjectArea(\"\");setSelectedMajor(\"\");setSelectedPacificSubjectArea(\"\");setPacificCourseCode(\"\");setResults([]);setShowTooltip(false);setShowResults(false);setNoMatchMessage(\"\");};const handleFilter=()=>{console.log(\"🔍 Filter parameters:\",{selectedCountry,selectedInstitution,selectedSubjectArea,selectedMajor,selectedPacificSubjectArea,pacificCourseCode});const filtered=allCourses.filter(course=>{const cCountry=sstr(course.country).trim().toLowerCase();const selCountry=sstr(selectedCountry).trim().toLowerCase();const cUni=sstr(course.partner_university).trim();const selUni=sstr(selectedInstitution).trim();const cSub=sstr(course.partner_course_subject);const selSub=sstr(selectedSubjectArea);const cPacSub=sstr(course.pacific_subject_area);const selPacSub=sstr(selectedPacificSubjectArea);const cPacCode=sstr(course.pacific_course_code).toLowerCase();const selPacCode=sstr(pacificCourseCode).toLowerCase();const cMajor=sstr(course.pacific_major).trim().toLowerCase();const selMajor=sstr(selectedMajor).trim().toLowerCase();return(!selectedCountry||cCountry===selCountry)&&(!selectedInstitution||cUni===selUni)&&(!selectedSubjectArea||cSub===selSub)&&(!selectedPacificSubjectArea||cPacSub===selPacSub)&&(!pacificCourseCode||cPacCode.includes(selPacCode))&&(!selectedMajor||cMajor===selMajor);});const grouped=filtered.reduce((acc,course)=>{const key=`${course.partner_university}__${course.country}`;if(!acc[key]){acc[key]={partner_university:course.partner_university,country:course.country,courses:[]};}acc[key].courses.push(course);return acc;},{});console.log(\"📦 Grouped Results:\",grouped);const groupedArray=Object.values(grouped).map(uni=>{const providersSet=new Set();uni.courses.forEach(c=>c.providers&&providersSet.add(c.providers));return{...uni,providers:Array.from(providersSet)};});setResults(groupedArray);setShowResults(true);console.log(\"✅ Final Search Results:\",groupedArray);setNoMatchMessage(groupedArray.length===0?`No courses in ${selectedCountry||\"selected country\"} for the selected major.`:\"\");};// <-- 🟢 CLOSE handleFilter here \nconst dropdownStyle={width:\"90%\",maxWidth:\"400px\",padding:\"14px\",borderRadius:\"6px\",border:\"1px solid #ccc\",fontSize:\"17px\",lineHeight:\"1.6\",marginBottom:\"20px\",backgroundColor:\"#e6ebf1\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"right 12px center\",backgroundSize:\"16px\",appearance:\"none\",WebkitAppearance:\"none\",color:\"#333\"};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:\"Neuzeit Grotesk Regular, Ramaraj Regular\",maxWidth:\"1200px\",margin:\"0 auto\",padding:\"40px 20px\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",width:\"100%\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:\"90%\",maxWidth:\"1200px\",display:\"flex\",justifyContent:\"center\",gap:\"80px\",alignItems:\"flex-start\",marginBottom:\"40px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"10px\",flex:1,minHeight:\"420px\",minWidth:\"400px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:\"26px\",marginTop:\"0px\",marginBottom:\"10px\",textAlign:\"left\",fontFamily:\"Bely Display\"},children:\"Pacific Courses\"}),/*#__PURE__*/_jsx(\"label\",{style:{marginTop:\"42px\",marginBottom:\"8px\",fontFamily:\"Ramaraja Regular\"},children:\"Majors:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMajor,onChange:e=>setSelectedMajor(e.target.value),style:dropdownStyle,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\" \"}),uopSchools.map((s,i)=>/*#__PURE__*/_jsx(\"option\",{value:s,children:s},`${s}-${i}`))]}),/*#__PURE__*/_jsx(\"label\",{style:{marginBottom:\"8px\",fontFamily:\"Ramaraja Regular\"},children:\"Course Code:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:pacificCourseCode,onChange:e=>setPacificCourseCode(e.target.value),placeholder:\"e.g., HIST 120\",style:{padding:\"10px\",fontSize:\"14px\",borderRadius:\"6px\",border:\"1px solid #ccc\",width:\"76%\",maxWidth:\"400px\",height:\"35px\",maxHeight:\"50px\",marginBottom:\"20px\",backgroundColor:\"#f9f9f9\"}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"10px\",flex:1,minHeight:\"420px\",minWidth:\"400px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:\"26px\",marginTop:\"0px\",marginBottom:\"10px\",textAlign:\"left\",fontFamily:\"Bely Display\"},children:\"International Course Equivalents\"}),/*#__PURE__*/_jsx(\"label\",{style:{marginTop:\"42px\",marginBottom:\"8px\",fontFamily:\"Ramaraja Regular\"},children:\"Country:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCountry,onChange:e=>setSelectedCountry(e.target.value),style:dropdownStyle,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\" \"}),countries.map((c,i)=>/*#__PURE__*/_jsx(\"option\",{value:c,children:c},`${c}-${i}`))]}),/*#__PURE__*/_jsx(\"label\",{children:\"University / Institution:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedInstitution,onChange:e=>setSelectedInstitution(e.target.value),style:dropdownStyle,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\" \"}),institutions.map((iName,i)=>/*#__PURE__*/_jsx(\"option\",{value:iName,children:iName},`${iName}-${i}`))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",gap:\"20px\",marginBottom:\"0px\",alignItems:\"flex-start\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleFilter,disabled:isSearchDisabled,title:\"Please be more specific in your search\",style:{backgroundColor:\"#E65300\",color:\"#fff\",border:\"none\",padding:\"10px 28px\",fontWeight:\"bold\",fontSize:\"16px\",borderRadius:\"6px\",width:\"120px\",cursor:isSearchDisabled?\"not-allowed\":\"pointer\",opacity:isSearchDisabled?0.6:1},children:\"Search\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClear,style:{backgroundColor:\" #A29889\",color:\"#fff\",border:\"none\",padding:\"10px 28px\",fontWeight:\"bold\",fontSize:\"16px\",borderRadius:\"6px\",width:\"120px\",cursor:\"pointer\"},children:\"Clear\"})]}),showResults&&results.length>0&&/*#__PURE__*/_jsx(UniversityAccordion,{universities:results}),showResults&&results.length===0&&noMatchMessage&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\",padding:\"14px\",backgroundColor:\"#f6f6f6\",borderLeft:\"4px solid #E65300\",borderRadius:\"4px\",fontSize:\"16px\",color:\"#333\",width:\"85%\",fontFamily:\"Neuzeit Grotesk Light\"},children:noMatchMessage})]});};export default CourseFilter;","map":{"version":3,"names":["React","useState","useEffect","ResultsTable","UniversityAccordion","jsx","_jsx","jsxs","_jsxs","SPREADSHEET_ID","GID_GENERAL","GID_MAJORS","sstr","v","String","fetchGvizJSON","gid","cb","Date","now","url","res","fetch","cache","text","trim","startsWith","Error","json","JSON","parse","replace","table","gvizToObjects","labels","cols","map","c","label","rows","r","cells","Object","fromEntries","lab","i","normalizeGeneralRow","_ref","_ref2","_r$pacific_course_nam","_r$partner_university","_r$country","_r$partner_course_cod","_r$partner_course_nam","_r$partner_course_cre","_r$pacific_course_cod","_r$pacific_major","_r$pacific_course_cre","_r$approval_term","_ref3","_r$providers","pacNameRaw","partner_university","country","Country","partner_course_code","partner_course_name","partner_course_credit","Partnere_course_credit","pacific_course_code","pacific_course_name","pacific_major","pacific_course_credit","approval_term","providers","provider","Provider","__raw","normalizeMajorsRows","m","firstVal","values","find","filter","toLowerCase","sort","CourseFilter","countries","setCountries","institutions","setInstitutions","subjectAreas","setSubjectAreas","pacificCourseCode","setPacificCourseCode","pacificSubjectAreas","setPacificSubjectAreas","uopSchools","setUopSchools","results","setResults","showTooltip","setShowTooltip","selectedCountry","setSelectedCountry","selectedInstitution","setSelectedInstitution","selectedSubjectArea","setSelectedSubjectArea","selectedMajor","setSelectedMajor","selectedPacificSubjectArea","setSelectedPacificSubjectArea","allCourses","setAllCourses","loading","setLoading","noMatchMessage","setNoMatchMessage","showResults","setShowResults","isSearchDisabled","load","console","log","generalTable","generalRows","normalized","Set","Boolean","majorsTable","majorsRows","slice","majorsList","length","e","error","allUnis","filteredUnis","handleClear","handleFilter","filtered","course","cCountry","selCountry","cUni","selUni","cSub","partner_course_subject","selSub","cPacSub","pacific_subject_area","selPacSub","cPacCode","selPacCode","cMajor","selMajor","includes","grouped","reduce","acc","key","courses","push","groupedArray","uni","providersSet","forEach","add","Array","from","dropdownStyle","width","maxWidth","padding","borderRadius","border","fontSize","lineHeight","marginBottom","backgroundColor","backgroundRepeat","backgroundPosition","backgroundSize","appearance","WebkitAppearance","color","children","style","fontFamily","margin","display","flexDirection","justifyContent","alignItems","gap","flex","minHeight","minWidth","marginTop","textAlign","value","onChange","target","s","type","placeholder","height","maxHeight","iName","onClick","disabled","title","fontWeight","cursor","opacity","universities","borderLeft"],"sources":["/Users/farheenshabbirshaikh/Documents/uop-course-filter/Course_Filter_UOP/uop-course-filter-frontend/src/components/CourseFilter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; \nimport ResultsTable from \"./ResultsTable\"; \nimport UniversityAccordion from \"./UniversityAccordion\"; \n \n// ---- Google Sheets via GViz JSON ---- \nconst SPREADSHEET_ID = \"16qWmlJFOqy0AzZ4F76Cds8ch2VNHlN_n\"; \nconst GID_GENERAL = \"1296735863\"; \nconst GID_MAJORS = \"265343630\"; \n \nconst sstr = (v) => (v == null ? \"\" : String(v)); \n \n// Fetch GViz JSON and unwrap setResponse(...) \nasync function fetchGvizJSON(gid) { \n \n  const cb = Date.now(); // cache buster\n  const url = `https://docs.google.com/spreadsheets/d/${SPREADSHEET_ID}/gviz/tq?tqx=out:json&gid=${gid}&cb=${cb}`;\n  const res = await fetch(url, { cache: \"no-store\" });\n  const text = await res.text();\n\n \nif (text.trim().startsWith(\"<\")) { \nthrow new Error(\"GViz returned HTML — sheet not public?\"); \n} \n \nconst json = JSON.parse( \ntext.replace(/^[\\s\\S]*?setResponse\\(/, \"\").replace(/\\);?\\s*$/, \"\") \n); \nreturn json.table; \n} \n \n// Convert GViz table → array of objects using header labels \nfunction gvizToObjects(table) { \nconst labels = table.cols.map((c) => (c?.label || \"\").trim()); \nreturn table.rows.map((r) => { \nconst cells = (r?.c || []).map((c) => (c ? c.v : \"\")); \nreturn Object.fromEntries(labels.map((lab, i) => [lab, cells[i]])); \n}); \n} \n// Normalize a \"General\" row to stable keys your UI expects \nfunction normalizeGeneralRow(r) { \nconst pacNameRaw = \nr[\"pacific_course_name\"] ?? \nr['\"pacific_course_name\\n\"'] ?? \nr['\"pacific_course_name\"'] ?? \"\"; \n \nreturn { \npartner_university: sstr(r.partner_university ?? r[\"partner university\"]).trim(), \ncountry: sstr(r.country ?? r.Country).trim(), \npartner_course_code: sstr(r.partner_course_code ?? r[\"partner course code\"]).trim(), \npartner_course_name: sstr(r.partner_course_name ?? r[\"partner course name\"]).trim(), \npartner_course_credit: sstr(r.partner_course_credit ?? r.Partnere_course_credit).trim(), \npacific_course_code: sstr(r.pacific_course_code ?? r[\"pacific course code\"]).trim(), \npacific_course_name: sstr(pacNameRaw).replace(/\"/g, \"\").trim(), \npacific_major: sstr(r.pacific_major ?? r[\"pacific major\"]).trim(), \npacific_course_credit: sstr(r.pacific_course_credit ?? r[\"pacific course credit\"]).trim(), \napproval_term: sstr(r.approval_term ?? r[\"approval term\"]).trim(), \nproviders: sstr(r.providers ?? r.provider ?? r.Provider).trim(), \n__raw: r, \n}; \n} \n \n \nfunction normalizeMajorsRows(rows) {\n  return rows\n    .map((m) => {\n      if (typeof m === \"string\") return m;\n      // m is an object like { \"<some header>\": \"value\" }\n      const firstVal = Object.values(m).find(v => v && String(v).trim() !== \"\");\n      return firstVal || \"\";\n    })\n    .map(v => String(v).trim())\n    // drop header-line like \"major\" or \"major\\n\"\n    .filter(v => v && v.toLowerCase() !== \"major\")\n    .sort();\n}\n \n \nconst CourseFilter = () => { \nconst [countries, setCountries] = useState([]); \nconst [institutions, setInstitutions] = useState([]); \nconst [subjectAreas, setSubjectAreas] = useState([]); \nconst [pacificCourseCode, setPacificCourseCode] = useState(\"\"); \nconst [pacificSubjectAreas, setPacificSubjectAreas] = useState([]); \nconst [uopSchools, setUopSchools] = useState([]); \nconst [results, setResults] = useState([]); \nconst [showTooltip, setShowTooltip] = useState(false); \nconst [selectedCountry, setSelectedCountry] = useState(\"\"); \nconst [selectedInstitution, setSelectedInstitution] = useState(\"\"); \nconst [selectedSubjectArea, setSelectedSubjectArea] = useState(\"\"); \nconst [selectedMajor, setSelectedMajor] = useState(\"\"); \nconst [selectedPacificSubjectArea, setSelectedPacificSubjectArea] = useState(\"\"); \nconst [allCourses, setAllCourses] = useState([]); \nconst [loading, setLoading] = useState(true); \nconst [noMatchMessage, setNoMatchMessage] = useState(\"\"); \nconst [showResults, setShowResults] = useState(false); \n \nconst isSearchDisabled = !( \nselectedCountry || \nselectedInstitution || \nselectedSubjectArea || \nselectedMajor || \nselectedPacificSubjectArea || \npacificCourseCode \n); \n \n// ---- load data once ---- \nuseEffect(() => { \nconst load = async () => { \ntry { \nconsole.log(\"Loading from GViz...\"); \n \n// Courses \nconst generalTable = await fetchGvizJSON(GID_GENERAL); \nconst generalRows = gvizToObjects(generalTable); \nconst normalized = generalRows.map(normalizeGeneralRow); \n \n \nsetAllCourses(normalized); \nsetCountries([...new Set(normalized.map(r => r.country))].filter(Boolean).sort()); \nsetInstitutions([...new Set(normalized.map(r => r.partner_university))].filter(Boolean).sort()); \n \n// Majors \nconst majorsTable = await fetchGvizJSON(GID_MAJORS); \nconst majorsRows = gvizToObjects(majorsTable); \n\nconsole.log(\"majorsRows sample:\", majorsRows.slice(0, 5)); \n \nconst majorsList = normalizeMajorsRows(majorsRows); \n \nsetUopSchools(majorsList); \n \nconsole.log(\" Majors list:\", majorsList.length, majorsList.slice(0, 10)); \n \n \n \n} catch (e) { \nconsole.error(\"GViz load error:\", e); \nsetNoMatchMessage(\"Failed to load data from Google Sheets.\"); \n} finally { \nsetLoading(false); \n} \n}; \nload(); \n}, []); \n \n// Cascading effect for universities when country changes \nuseEffect(() => { \nconsole.log(\" Selected Country=====\", selectedCountry); \nif (!selectedCountry) { \nconst allUnis = [...new Set(allCourses.map(r => r.partner_university))] \n.filter(Boolean) \n.sort(); \nconsole.log(\" Showing ALL universities:\", allUnis.length); \nsetInstitutions(allUnis); \nreturn; \n} \n \nconst filteredUnis = [...new Set( \nallCourses \n.filter(r => (r.country || \"\").toLowerCase() === selectedCountry.toLowerCase()) \n.map(r => r.partner_university) \n)] \n.filter(Boolean) \n.sort(); \n \nconsole.log(` Universities for ${selectedCountry}:`, filteredUnis.length); \nsetInstitutions(filteredUnis); \n}, [selectedCountry, allCourses]); \n \n \nconst handleClear = () => { \nsetSelectedCountry(\"\"); \nsetSelectedInstitution(\"\"); \nsetSelectedSubjectArea(\"\"); \nsetSelectedMajor(\"\"); \nsetSelectedPacificSubjectArea(\"\"); \nsetPacificCourseCode(\"\"); \nsetResults([]); \nsetShowTooltip(false); \nsetShowResults(false); \nsetNoMatchMessage(\"\"); \n}; \n \nconst handleFilter = () => { \nconsole.log(\"🔍 Filter parameters:\", { \nselectedCountry, \nselectedInstitution, \nselectedSubjectArea, \nselectedMajor, \nselectedPacificSubjectArea, \npacificCourseCode \n}); \n \nconst filtered = allCourses.filter((course) => { \nconst cCountry = sstr(course.country).trim().toLowerCase(); \nconst selCountry = sstr(selectedCountry).trim().toLowerCase(); \n \nconst cUni = sstr(course.partner_university).trim(); \nconst selUni = sstr(selectedInstitution).trim(); \n \nconst cSub = sstr(course.partner_course_subject); \nconst selSub = sstr(selectedSubjectArea); \n \nconst cPacSub = sstr(course.pacific_subject_area); \nconst selPacSub = sstr(selectedPacificSubjectArea); \n \nconst cPacCode = sstr(course.pacific_course_code).toLowerCase(); \nconst selPacCode = sstr(pacificCourseCode).toLowerCase(); \n \nconst cMajor = sstr(course.pacific_major).trim().toLowerCase(); \nconst selMajor = sstr(selectedMajor).trim().toLowerCase(); \n \nreturn ( \n(!selectedCountry || cCountry === selCountry) && \n(!selectedInstitution || cUni === selUni) && \n(!selectedSubjectArea || cSub === selSub) && \n(!selectedPacificSubjectArea || cPacSub === selPacSub) && \n(!pacificCourseCode || cPacCode.includes(selPacCode)) && \n(!selectedMajor || cMajor === selMajor) \n); \n}); \n \n \n \nconst grouped = filtered.reduce((acc, course) => { \nconst key = `${course.partner_university}__${course.country}`; \nif (!acc[key]) { \nacc[key] = { \npartner_university: course.partner_university, \ncountry: course.country, \ncourses: [], \n}; \n} \nacc[key].courses.push(course); \nreturn acc; \n}, {}); \n \nconsole.log(\"📦 Grouped Results:\", grouped); \n \nconst groupedArray = Object.values(grouped).map((uni) => { \nconst providersSet = new Set(); \nuni.courses.forEach((c) => c.providers && providersSet.add(c.providers)); \nreturn { ...uni, providers: Array.from(providersSet) }; \n}); \n \nsetResults(groupedArray); \nsetShowResults(true); \nconsole.log(\"✅ Final Search Results:\", groupedArray); \n \nsetNoMatchMessage( \ngroupedArray.length === 0 \n? `No courses in ${selectedCountry || \"selected country\"} for the selected major.` \n: \"\" \n); \n}; // <-- 🟢 CLOSE handleFilter here \n \nconst dropdownStyle = { \nwidth: \"90%\", \nmaxWidth: \"400px\", \npadding: \"14px\", \nborderRadius: \"6px\", \nborder: \"1px solid #ccc\", \nfontSize: \"17px\", \nlineHeight: \"1.6\", \nmarginBottom: \"20px\", \nbackgroundColor: \"#e6ebf1\", \nbackgroundRepeat: \"no-repeat\", \nbackgroundPosition: \"right 12px center\", \nbackgroundSize: \"16px\", \nappearance: \"none\", \nWebkitAppearance: \"none\", \ncolor: \"#333\", \n}; \n \nif (loading) return <div>Loading...</div>; \n \nreturn ( \n<div \nstyle={{ \nfontFamily: \"Neuzeit Grotesk Regular, Ramaraj Regular\", \nmaxWidth: \"1200px\", \nmargin: \"0 auto\", \npadding: \"40px 20px\", \ndisplay: \"flex\", \nflexDirection: \"column\", \njustifyContent: \"center\", \nalignItems: \"center\", \nwidth: \"100%\", \n}} \n> \n{/* Two-column layout */} \n<div \nstyle={{ \nwidth: \"90%\", \nmaxWidth: \"1200px\", \ndisplay: \"flex\", \njustifyContent: \"center\", \ngap: \"80px\", \nalignItems: \"flex-start\", \nmarginBottom: \"40px\", \n}} \n> \n{/* Pacific Courses */} \n<div \nstyle={{ \ndisplay: \"flex\", \nflexDirection: \"column\", \ngap: \"10px\", \nflex: 1, \nminHeight: \"420px\", \nminWidth: \"400px\", \n}} \n> \n<h3 \nstyle={{ \nfontSize: \"26px\", \nmarginTop: \"0px\", \nmarginBottom: \"10px\", \ntextAlign: \"left\", \nfontFamily: \"Bely Display\", \n}} \n> \nPacific Courses \n</h3> \n \n<label style={{ marginTop: \"42px\", marginBottom: \"8px\", fontFamily: \"Ramaraja Regular\" }}> \nMajors: \n</label> \n \n<select \nvalue={selectedMajor} \nonChange={(e) => setSelectedMajor(e.target.value)} \nstyle={dropdownStyle} \n> \n<option value=\"\"> </option> \n{uopSchools.map((s, i) => ( \n<option key={`${s}-${i}`} value={s}> \n{s} \n</option> \n))} \n</select> \n \n<label style={{ marginBottom: \"8px\", fontFamily: \"Ramaraja Regular\" }}> \nCourse Code: \n</label> \n<input \ntype=\"text\" \nvalue={pacificCourseCode} \nonChange={(e) => setPacificCourseCode(e.target.value)} \nplaceholder=\"e.g., HIST 120\" \nstyle={{ \npadding: \"10px\", \nfontSize: \"14px\", \nborderRadius: \"6px\", \nborder: \"1px solid #ccc\", \nwidth: \"76%\", \nmaxWidth: \"400px\", \nheight: \"35px\", \nmaxHeight: \"50px\", \nmarginBottom: \"20px\", \nbackgroundColor: \"#f9f9f9\", \n}} \n/> \n</div> \n \n{/* International Course Equivalents */} \n<div \nstyle={{ \ndisplay: \"flex\", \nflexDirection: \"column\", \ngap: \"10px\", \nflex: 1, \nminHeight: \"420px\", \nminWidth: \"400px\", \n}} \n> \n<h3 \nstyle={{ \nfontSize: \"26px\", \nmarginTop: \"0px\", \nmarginBottom: \"10px\", \ntextAlign: \"left\", \nfontFamily: \"Bely Display\", \n}} \n> \nInternational Course Equivalents \n</h3> \n \n<label style={{ marginTop: \"42px\", marginBottom: \"8px\", fontFamily: \"Ramaraja Regular\" }}> \nCountry: \n</label> \n<select \nvalue={selectedCountry} \nonChange={(e) => setSelectedCountry(e.target.value)} \nstyle={dropdownStyle} \n> \n<option value=\"\"> </option> \n{countries.map((c, i) => ( \n<option key={`${c}-${i}`} value={c}> \n{c} \n</option> \n))} \n</select> \n \n<label>University / Institution:</label> \n<select \nvalue={selectedInstitution} \nonChange={(e) => setSelectedInstitution(e.target.value)} \nstyle={dropdownStyle} \n> \n<option value=\"\"> </option> \n{institutions.map((iName, i) => ( \n<option key={`${iName}-${i}`} value={iName}> \n{iName} \n</option> \n))} \n</select> \n</div> \n</div> \n \n{/* Buttons */} \n<div \nstyle={{ \ndisplay: \"flex\", \njustifyContent: \"center\", \ngap: \"20px\", \nmarginBottom: \"0px\", \nalignItems: \"flex-start\", \n}} \n> \n<button \nonClick={handleFilter} \ndisabled={isSearchDisabled} \ntitle=\"Please be more specific in your search\" \nstyle={{ \nbackgroundColor: \"#E65300\", \ncolor: \"#fff\", \nborder: \"none\", \npadding: \"10px 28px\", \nfontWeight: \"bold\", \nfontSize: \"16px\", \nborderRadius: \"6px\", \nwidth: \"120px\", \ncursor: isSearchDisabled ? \"not-allowed\" : \"pointer\", \nopacity: isSearchDisabled ? 0.6 : 1, \n}} \n> \nSearch \n</button> \n \n<button \nonClick={handleClear} \nstyle={{ \nbackgroundColor: \" #A29889\", \ncolor: \"#fff\", \nborder: \"none\", \npadding: \"10px 28px\", \nfontWeight: \"bold\", \nfontSize: \"16px\", \nborderRadius: \"6px\", \nwidth: \"120px\", \ncursor: \"pointer\", \n}} \n> \nClear \n</button> \n</div> \n \n{showResults && results.length > 0 && ( \n<UniversityAccordion universities={results} /> \n)} \n \n{showResults && results.length === 0 && noMatchMessage && ( \n<div \nstyle={{ \nmarginTop: \"20px\", \npadding: \"14px\", \nbackgroundColor: \"#f6f6f6\", \nborderLeft: \"4px solid #E65300\", \nborderRadius: \"4px\", \nfontSize: \"16px\", \ncolor: \"#333\", \nwidth: \"85%\", \nfontFamily: \"Neuzeit Grotesk Light\", \n}} \n> \n{noMatchMessage} \n</div> \n)} \n</div> \n); \n}; \n \n \nexport default CourseFilter; \n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}